name: Code Check on Comment

on:
  issue_comment:
    types: [created]

permissions:
  pull-requests: write
  contents: read

jobs:
  check-on-comment:
    runs-on: ubuntu-latest
    if: |
      github.event.issue.pull_request != '' &&
      contains(github.event.comment.body, 'recheck')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run code validation
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          if (github.event.comment.body.trim().toLowerCase() === 'recheck') {
            console.log('Running code formatting validation...');
            
            // Install and run Black check
            const { exec } = require('child_process');
            const util = require('util');
            const execPromise = util.promisify(exec);
            
            try {
              // Set up Python and install Black
              await execPromise('python -m pip install --upgrade pip');
              await execPromise('pip install black');
              
              // Run Black check
              const { stdout, stderr } = await execPromise('black --check .');
              console.log('✅ Code formatting check passed!');
              
              // Add success comment to PR
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: "✅ Code formatting validation passed! All Python code conforms to Black style guidelines."
              });
              
            } catch (error) {
              console.error('❌ Code formatting check failed:', error);
              
              // Add failure comment to PR
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: "❌ Code formatting check failed! Please run 'black .' to format your code."
              });
              
              // Fail the step
              core.setFailed('Code formatting validation failed');
            }
          }
